var ROOT,Helper;!function(a){function b(a,b){ROOT[a]=b}function c(){ROOT="undefined"!=typeof module&&module.exports?global:window}a.setModule=b,c(),b("setModule",b)}(Helper||(Helper={}));var Matrix;!function(a){var b=function(){function a(a,b,c){this.d1=a,this.d2=b,this.arr_length=0,this.arr_length=this.d1*this.d2,this.arr=new Uint32Array(this.arr_length);for(var d=0;d<this.arr_length;++d)this.arr[d]=c?c:0}return a.prototype.getArray=function(){return this.arr},a.prototype.dim=function(){return{d1:this.d1,d2:this.d2}},a.prototype.length=function(){return this.arr_length},a.prototype.get=function(a,b){var c=this.d1*b+a;if(c>=this.length())throw"Index out of bounds";return this.arr[c]},a.prototype.set=function(a,b,c){var d=this.d1*b+a;if(d>=this.length())throw"Index out of bounds";this.arr[d]=c},a.prototype.add=function(b){var c=b.dim();if(this.d1!==c.d1||this.d2!==c.d2)throw"Refusing to add 2 matrices of different dimensions!";for(var d=new a(this.d1,this.d2),e=0;e<this.d1;++e)for(var f=0;f<this.d2;++f)d.set(e,f,this.get(e,f)+b.get(e,f));return d},a.prototype.subtract=function(b){var c=b.dim();if(this.d1!==c.d1||this.d2!==c.d2)throw"Refusing to add 2 matrices of different dimensions!";for(var d=new a(this.d1,this.d2),e=0;e<this.d1;++e)for(var f=0;f<this.d2;++f)d.set(e,f,this.get(e,f)-b.get(e,f));return d},a}();a.Matrix2D=b,setModule("Matrix",a)}(Matrix||(Matrix={}));